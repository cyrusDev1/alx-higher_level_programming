===================
The 7-base_geometry
===================

Using
-----

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("width", 14)

::

::

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

::

    >>> bg.integer_validator("width", "height")
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("height", "width")
    Traceback (most recent call last):
    TypeError: height must be an integer

::

    >>> bg.integer_validator("width", True)
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("width", False)
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("width", [1, 2])
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("width", (1, 2))
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("width", {'name': 'Doe'})
    Traceback (most recent call last):
    TypeError: width must be an integer

::


::

    >>> bg.integer_validator("width", 7.5)
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator("NaN", float('nan'))
    Traceback (most recent call last):
    TypeError: NaN must be an integer

::

::

    >>> bg.integer_validator("width", None)
    Traceback (most recent call last):
    TypeError: width must be an integer

::

::

    >>> bg.integer_validator(None, None)
    Traceback (most recent call last):
    TypeError: None must be an integer
    >>> bg.integer_validator(None, 7)

::

::

    >>> bg.integer_validator("width", -9)
    Traceback (most recent call last):
    ValueError: width must be greater than 0

::

::

    >>> bg.integer_validator("width", 0)
    Traceback (most recent call last):
    ValueError: width must be greater than 0

::

::

    >>> bg.integer_validator() # doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments:
    'name' and 'value'

;;

::

    >>> bg.integer_validator("Antoine") # doctest: +NORMALIZE_WHITESPACE
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument:
    'value'

::
